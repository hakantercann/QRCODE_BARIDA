<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="qrcodeBaridaDataSet" targetNamespace="http://tempuri.org/qrcodeBaridaDataSet.xsd" xmlns:mstns="http://tempuri.org/qrcodeBaridaDataSet.xsd" xmlns="http://tempuri.org/qrcodeBaridaDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="qrcodeBaridaConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="qrcodeBaridaConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.QRCODE_BARIDA.Properties.Settings.GlobalReference.Default.qrcodeBaridaConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="qrcodesTableAdapter" GeneratorDataComponentClassName="qrcodesTableAdapter" Name="qrcodes" UserDataComponentName="qrcodesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.qrcodes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[qrcodes] WHERE (([qrID] = @Original_qrID) AND ([qrCode] = @Original_qrCode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_qrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="qrID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_qrCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="qrCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[qrcodes] ([qrCode]) VALUES (@qrCode);
SELECT qrID, qrCode FROM qrcodes WHERE (qrID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@qrCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="qrCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT qrID, qrCode FROM dbo.qrcodes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[qrcodes] SET [qrCode] = @qrCode WHERE (([qrID] = @Original_qrID) AND ([qrCode] = @Original_qrCode));
SELECT qrID, qrCode FROM qrcodes WHERE (qrID = @qrID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@qrCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="qrCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_qrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="qrID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_qrCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="qrCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="qrID" ColumnName="qrID" DataSourceName="qrcodeBarida.dbo.qrcodes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@qrID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="qrID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="qrID" DataSetColumn="qrID" />
              <Mapping SourceColumn="qrCode" DataSetColumn="qrCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="qrInfoTableAdapter" GeneratorDataComponentClassName="qrInfoTableAdapter" Name="qrInfo" UserDataComponentName="qrInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.qrInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[qrInfo] WHERE (([InfoID] = @Original_InfoID) AND ((@IsNull_qrID = 1 AND [qrID] IS NULL) OR ([qrID] = @Original_qrID)) AND ([ProductName] = @Original_ProductName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InfoID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InfoID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_qrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="qrID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_qrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="qrID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProductName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProductName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[qrInfo] ([qrID], [ProductName]) VALUES (@qrID, @ProductName);
SELECT InfoID, qrID, ProductName FROM qrInfo WHERE (InfoID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@qrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="qrID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProductName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProductName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT InfoID, qrID, ProductName FROM dbo.qrInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[qrInfo] SET [qrID] = @qrID, [ProductName] = @ProductName WHERE (([InfoID] = @Original_InfoID) AND ((@IsNull_qrID = 1 AND [qrID] IS NULL) OR ([qrID] = @Original_qrID)) AND ([ProductName] = @Original_ProductName));
SELECT InfoID, qrID, ProductName FROM qrInfo WHERE (InfoID = @InfoID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@qrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="qrID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProductName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProductName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InfoID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InfoID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_qrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="qrID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_qrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="qrID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProductName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProductName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="InfoID" ColumnName="InfoID" DataSourceName="qrcodeBarida.dbo.qrInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@InfoID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="InfoID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="InfoID" DataSetColumn="InfoID" />
              <Mapping SourceColumn="qrID" DataSetColumn="qrID" />
              <Mapping SourceColumn="ProductName" DataSetColumn="ProductName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="rolesTableAdapter" GeneratorDataComponentClassName="rolesTableAdapter" Name="roles" UserDataComponentName="rolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[roles] WHERE (([RoleID] = @Original_RoleID) AND ((@IsNull_RoleName = 1 AND [RoleName] IS NULL) OR ([RoleName] = @Original_RoleName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RoleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[roles] ([RoleName]) VALUES (@RoleName);
SELECT RoleID, RoleName FROM roles WHERE (RoleID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoleID, RoleName FROM dbo.roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[roles] SET [RoleName] = @RoleName WHERE (([RoleID] = @Original_RoleID) AND ((@IsNull_RoleName = 1 AND [RoleName] IS NULL) OR ([RoleName] = @Original_RoleName)));
SELECT RoleID, RoleName FROM roles WHERE (RoleID = @RoleID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RoleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleID" ColumnName="RoleID" DataSourceName="qrcodeBarida.dbo.roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleID" DataSetColumn="RoleID" />
              <Mapping SourceColumn="RoleName" DataSetColumn="RoleName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="userLoginTableAdapter" GeneratorDataComponentClassName="userLoginTableAdapter" Name="userLogin" UserDataComponentName="userLoginTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.userLogin" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[userLogin] WHERE (([LoginID] = @Original_LoginID) AND ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR ([UserID] = @Original_UserID)) AND ([UserName] = @Original_UserName) AND ([UserPass] = @Original_UserPass))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LoginID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LoginID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserPass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserPass" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[userLogin] ([UserID], [UserName], [UserPass]) VALUES (@UserID, @UserName, @UserPass);
SELECT LoginID, UserID, UserName, UserPass FROM userLogin WHERE (LoginID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserPass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserPass" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LoginID, UserID, UserName, UserPass FROM dbo.userLogin</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[userLogin] SET [UserID] = @UserID, [UserName] = @UserName, [UserPass] = @UserPass WHERE (([LoginID] = @Original_LoginID) AND ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR ([UserID] = @Original_UserID)) AND ([UserName] = @Original_UserName) AND ([UserPass] = @Original_UserPass));
SELECT LoginID, UserID, UserName, UserPass FROM userLogin WHERE (LoginID = @LoginID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserPass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserPass" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LoginID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LoginID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserPass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserPass" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="LoginID" ColumnName="LoginID" DataSourceName="qrcodeBarida.dbo.userLogin" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LoginID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LoginID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LoginID" DataSetColumn="LoginID" />
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="UserPass" DataSetColumn="UserPass" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="userRolesTableAdapter" GeneratorDataComponentClassName="userRolesTableAdapter" Name="userRoles" UserDataComponentName="userRolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.userRoles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[userRoles] WHERE (([urID] = @Original_urID) AND ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR ([UserID] = @Original_UserID)) AND ((@IsNull_RoleID = 1 AND [RoleID] IS NULL) OR ([RoleID] = @Original_RoleID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_urID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="urID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[userRoles] ([UserID], [RoleID]) VALUES (@UserID, @RoleID);
SELECT urID, UserID, RoleID FROM userRoles WHERE (urID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT urID, UserID, RoleID FROM dbo.userRoles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[userRoles] SET [UserID] = @UserID, [RoleID] = @RoleID WHERE (([urID] = @Original_urID) AND ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR ([UserID] = @Original_UserID)) AND ((@IsNull_RoleID = 1 AND [RoleID] IS NULL) OR ([RoleID] = @Original_RoleID)));
SELECT urID, UserID, RoleID FROM userRoles WHERE (urID = @urID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_urID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="urID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="urID" ColumnName="urID" DataSourceName="qrcodeBarida.dbo.userRoles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@urID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="urID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="urID" DataSetColumn="urID" />
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="RoleID" DataSetColumn="RoleID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[users] WHERE (([UserID] = @Original_UserID) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[users] ([UserID], [FirstName], [LastName]) VALUES (@UserID, @FirstName, @LastName);
SELECT UserID, FirstName, LastName FROM users WHERE (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, FirstName, LastName FROM dbo.users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[users] SET [UserID] = @UserID, [FirstName] = @FirstName, [LastName] = @LastName WHERE (([UserID] = @Original_UserID) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName));
SELECT UserID, FirstName, LastName FROM users WHERE (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="qrLoginFetchTableAdapter" GeneratorDataComponentClassName="qrLoginFetchTableAdapter" Name="qrLoginFetch" UserDataComponentName="qrLoginFetchTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.qrLoginFetch" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, firstname, lastname, RoleName FROM dbo.qrLoginFetch</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="firstname" DataSetColumn="firstname" />
              <Mapping SourceColumn="lastname" DataSetColumn="lastname" />
              <Mapping SourceColumn="RoleName" DataSetColumn="RoleName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="passLoginFetchTableAdapter" GeneratorDataComponentClassName="passLoginFetchTableAdapter" Name="passLoginFetch" UserDataComponentName="passLoginFetchTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.passLoginFetch" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, firstname, lastname, RoleName, UserName, UserPass FROM dbo.passLoginFetch</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="firstname" DataSetColumn="firstname" />
              <Mapping SourceColumn="lastname" DataSetColumn="lastname" />
              <Mapping SourceColumn="RoleName" DataSetColumn="RoleName" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="UserPass" DataSetColumn="UserPass" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="logImagesTableAdapter" GeneratorDataComponentClassName="logImagesTableAdapter" Name="logImages" UserDataComponentName="logImagesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.logImages" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[logImages] WHERE (([liID] = @Original_liID) AND ((@IsNull_LogID = 1 AND [LogID] IS NULL) OR ([LogID] = @Original_LogID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_liID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="liID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LogID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LogID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[logImages] ([LogID], [logImage]) VALUES (@LogID, @logImage);
SELECT liID, LogID, logImage FROM logImages WHERE (liID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LogID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@logImage" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="logImage" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT liID, LogID, logImage FROM dbo.logImages</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[logImages] SET [LogID] = @LogID, [logImage] = @logImage WHERE (([liID] = @Original_liID) AND ((@IsNull_LogID = 1 AND [LogID] IS NULL) OR ([LogID] = @Original_LogID)));
SELECT liID, LogID, logImage FROM logImages WHERE (liID = @liID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LogID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@logImage" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="logImage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_liID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="liID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LogID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LogID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="liID" ColumnName="liID" DataSourceName="qrcodeBarida.dbo.logImages" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@liID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="liID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="liID" DataSetColumn="liID" />
              <Mapping SourceColumn="LogID" DataSetColumn="LogID" />
              <Mapping SourceColumn="logImage" DataSetColumn="logImage" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="logsTableAdapter" GeneratorDataComponentClassName="logsTableAdapter" Name="logs" UserDataComponentName="logsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.logs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[logs] WHERE (([LogID] = @Original_LogID) AND ([identicator] = @Original_identicator))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LogID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_identicator" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="identicator" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[logs] ([UserID], [productionDate]) VALUES (@UserID, @productionDate);
SELECT LogID, UserID, productionDate, identicator FROM logs WHERE (LogID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@productionDate" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="productionDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LogID, UserID, productionDate, identicator FROM dbo.logs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[logs] SET [UserID] = @UserID, [productionDate] = @productionDate WHERE (([LogID] = @Original_LogID) AND ([identicator] = @Original_identicator));
SELECT LogID, UserID, productionDate, identicator FROM logs WHERE (LogID = @LogID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@productionDate" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="productionDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LogID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_identicator" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="identicator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="LogID" ColumnName="LogID" DataSourceName="qrcodeBarida.dbo.logs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LogID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LogID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LogID" DataSetColumn="LogID" />
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="productionDate" DataSetColumn="productionDate" />
              <Mapping SourceColumn="identicator" DataSetColumn="identicator" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="logViewTableAdapter" GeneratorDataComponentClassName="logViewTableAdapter" Name="logView" UserDataComponentName="logViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qrcodeBaridaConnectionString (Settings)" DbObjectName="qrcodeBarida.dbo.logView" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT FirstName, LastName, productionDate, identicator, LogID FROM dbo.logView</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
              <Mapping SourceColumn="productionDate" DataSetColumn="productionDate" />
              <Mapping SourceColumn="identicator" DataSetColumn="identicator" />
              <Mapping SourceColumn="LogID" DataSetColumn="LogID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="qrcodeBaridaDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="qrcodeBaridaDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="qrcodeBaridaDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="qrcodes" msprop:Generator_RowEvHandlerName="qrcodesRowChangeEventHandler" msprop:Generator_RowDeletedName="qrcodesRowDeleted" msprop:Generator_RowDeletingName="qrcodesRowDeleting" msprop:Generator_RowEvArgName="qrcodesRowChangeEvent" msprop:Generator_TablePropName="qrcodes" msprop:Generator_RowChangedName="qrcodesRowChanged" msprop:Generator_UserTableName="qrcodes" msprop:Generator_RowChangingName="qrcodesRowChanging" msprop:Generator_RowClassName="qrcodesRow" msprop:Generator_TableClassName="qrcodesDataTable" msprop:Generator_TableVarName="tableqrcodes">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="qrID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="qrIDColumn" msprop:Generator_ColumnPropNameInRow="qrID" msprop:Generator_UserColumnName="qrID" msprop:Generator_ColumnVarNameInTable="columnqrID" type="xs:int" />
              <xs:element name="qrCode" msprop:Generator_ColumnPropNameInTable="qrCodeColumn" msprop:Generator_ColumnPropNameInRow="qrCode" msprop:Generator_UserColumnName="qrCode" msprop:Generator_ColumnVarNameInTable="columnqrCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="qrInfo" msprop:Generator_RowEvHandlerName="qrInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="qrInfoRowDeleted" msprop:Generator_RowDeletingName="qrInfoRowDeleting" msprop:Generator_RowEvArgName="qrInfoRowChangeEvent" msprop:Generator_TablePropName="qrInfo" msprop:Generator_RowChangedName="qrInfoRowChanged" msprop:Generator_UserTableName="qrInfo" msprop:Generator_RowChangingName="qrInfoRowChanging" msprop:Generator_RowClassName="qrInfoRow" msprop:Generator_TableClassName="qrInfoDataTable" msprop:Generator_TableVarName="tableqrInfo">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="InfoID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="InfoIDColumn" msprop:Generator_ColumnPropNameInRow="InfoID" msprop:Generator_UserColumnName="InfoID" msprop:Generator_ColumnVarNameInTable="columnInfoID" type="xs:int" />
              <xs:element name="qrID" msprop:Generator_ColumnPropNameInTable="qrIDColumn" msprop:Generator_ColumnPropNameInRow="qrID" msprop:Generator_UserColumnName="qrID" msprop:Generator_ColumnVarNameInTable="columnqrID" type="xs:int" minOccurs="0" />
              <xs:element name="ProductName" msprop:Generator_ColumnPropNameInTable="ProductNameColumn" msprop:Generator_ColumnPropNameInRow="ProductName" msprop:Generator_UserColumnName="ProductName" msprop:Generator_ColumnVarNameInTable="columnProductName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="roles" msprop:Generator_RowEvHandlerName="rolesRowChangeEventHandler" msprop:Generator_RowDeletedName="rolesRowDeleted" msprop:Generator_RowDeletingName="rolesRowDeleting" msprop:Generator_RowEvArgName="rolesRowChangeEvent" msprop:Generator_TablePropName="roles" msprop:Generator_RowChangedName="rolesRowChanged" msprop:Generator_UserTableName="roles" msprop:Generator_RowChangingName="rolesRowChanging" msprop:Generator_RowClassName="rolesRow" msprop:Generator_TableClassName="rolesDataTable" msprop:Generator_TableVarName="tableroles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="RoleIDColumn" msprop:Generator_ColumnPropNameInRow="RoleID" msprop:Generator_UserColumnName="RoleID" msprop:Generator_ColumnVarNameInTable="columnRoleID" type="xs:int" />
              <xs:element name="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_UserColumnName="RoleName" msprop:Generator_ColumnVarNameInTable="columnRoleName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="userLogin" msprop:Generator_RowEvHandlerName="userLoginRowChangeEventHandler" msprop:Generator_RowDeletedName="userLoginRowDeleted" msprop:Generator_RowDeletingName="userLoginRowDeleting" msprop:Generator_RowEvArgName="userLoginRowChangeEvent" msprop:Generator_TablePropName="userLogin" msprop:Generator_RowChangedName="userLoginRowChanged" msprop:Generator_UserTableName="userLogin" msprop:Generator_RowChangingName="userLoginRowChanging" msprop:Generator_RowClassName="userLoginRow" msprop:Generator_TableClassName="userLoginDataTable" msprop:Generator_TableVarName="tableuserLogin">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LoginID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="LoginIDColumn" msprop:Generator_ColumnPropNameInRow="LoginID" msprop:Generator_UserColumnName="LoginID" msprop:Generator_ColumnVarNameInTable="columnLoginID" type="xs:int" />
              <xs:element name="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" type="xs:int" minOccurs="0" />
              <xs:element name="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_UserColumnName="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserPass" msprop:Generator_ColumnPropNameInTable="UserPassColumn" msprop:Generator_ColumnPropNameInRow="UserPass" msprop:Generator_UserColumnName="UserPass" msprop:Generator_ColumnVarNameInTable="columnUserPass">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="userRoles" msprop:Generator_RowEvHandlerName="userRolesRowChangeEventHandler" msprop:Generator_RowDeletedName="userRolesRowDeleted" msprop:Generator_RowDeletingName="userRolesRowDeleting" msprop:Generator_RowEvArgName="userRolesRowChangeEvent" msprop:Generator_TablePropName="userRoles" msprop:Generator_RowChangedName="userRolesRowChanged" msprop:Generator_UserTableName="userRoles" msprop:Generator_RowChangingName="userRolesRowChanging" msprop:Generator_RowClassName="userRolesRow" msprop:Generator_TableClassName="userRolesDataTable" msprop:Generator_TableVarName="tableuserRoles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="urID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="urIDColumn" msprop:Generator_ColumnPropNameInRow="urID" msprop:Generator_UserColumnName="urID" msprop:Generator_ColumnVarNameInTable="columnurID" type="xs:int" />
              <xs:element name="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" type="xs:int" minOccurs="0" />
              <xs:element name="RoleID" msprop:Generator_ColumnPropNameInTable="RoleIDColumn" msprop:Generator_ColumnPropNameInRow="RoleID" msprop:Generator_UserColumnName="RoleID" msprop:Generator_ColumnVarNameInTable="columnRoleID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowEvArgName="usersRowChangeEvent" msprop:Generator_TablePropName="users" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_UserTableName="users" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_RowClassName="usersRow" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_TableVarName="tableusers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" type="xs:int" />
              <xs:element name="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_UserColumnName="FirstName" msprop:Generator_ColumnVarNameInTable="columnFirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_UserColumnName="LastName" msprop:Generator_ColumnVarNameInTable="columnLastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="qrLoginFetch" msprop:Generator_RowEvHandlerName="qrLoginFetchRowChangeEventHandler" msprop:Generator_RowDeletedName="qrLoginFetchRowDeleted" msprop:Generator_RowDeletingName="qrLoginFetchRowDeleting" msprop:Generator_RowEvArgName="qrLoginFetchRowChangeEvent" msprop:Generator_TablePropName="qrLoginFetch" msprop:Generator_RowChangedName="qrLoginFetchRowChanged" msprop:Generator_UserTableName="qrLoginFetch" msprop:Generator_RowChangingName="qrLoginFetchRowChanging" msprop:Generator_RowClassName="qrLoginFetchRow" msprop:Generator_TableClassName="qrLoginFetchDataTable" msprop:Generator_TableVarName="tableqrLoginFetch">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" type="xs:int" />
              <xs:element name="firstname" msprop:Generator_ColumnPropNameInTable="firstnameColumn" msprop:Generator_ColumnPropNameInRow="firstname" msprop:Generator_UserColumnName="firstname" msprop:Generator_ColumnVarNameInTable="columnfirstname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="lastname" msprop:Generator_ColumnPropNameInTable="lastnameColumn" msprop:Generator_ColumnPropNameInRow="lastname" msprop:Generator_UserColumnName="lastname" msprop:Generator_ColumnVarNameInTable="columnlastname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_UserColumnName="RoleName" msprop:Generator_ColumnVarNameInTable="columnRoleName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="passLoginFetch" msprop:Generator_RowClassName="passLoginFetchRow" msprop:Generator_RowEvHandlerName="passLoginFetchRowChangeEventHandler" msprop:Generator_RowDeletedName="passLoginFetchRowDeleted" msprop:Generator_RowDeletingName="passLoginFetchRowDeleting" msprop:Generator_RowEvArgName="passLoginFetchRowChangeEvent" msprop:Generator_TablePropName="passLoginFetch" msprop:Generator_RowChangedName="passLoginFetchRowChanged" msprop:Generator_UserTableName="passLoginFetch" msprop:Generator_RowChangingName="passLoginFetchRowChanging" msprop:Generator_TableClassName="passLoginFetchDataTable" msprop:Generator_TableVarName="tablepassLoginFetch">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="firstname" msprop:Generator_UserColumnName="firstname" msprop:Generator_ColumnPropNameInTable="firstnameColumn" msprop:Generator_ColumnPropNameInRow="firstname" msprop:Generator_ColumnVarNameInTable="columnfirstname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="lastname" msprop:Generator_UserColumnName="lastname" msprop:Generator_ColumnPropNameInTable="lastnameColumn" msprop:Generator_ColumnPropNameInRow="lastname" msprop:Generator_ColumnVarNameInTable="columnlastname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RoleName" msprop:Generator_UserColumnName="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_ColumnVarNameInTable="columnRoleName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserName" msprop:Generator_UserColumnName="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserPass" msprop:Generator_UserColumnName="UserPass" msprop:Generator_ColumnPropNameInTable="UserPassColumn" msprop:Generator_ColumnPropNameInRow="UserPass" msprop:Generator_ColumnVarNameInTable="columnUserPass">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="logImages" msprop:Generator_RowEvHandlerName="logImagesRowChangeEventHandler" msprop:Generator_RowDeletedName="logImagesRowDeleted" msprop:Generator_RowDeletingName="logImagesRowDeleting" msprop:Generator_RowEvArgName="logImagesRowChangeEvent" msprop:Generator_TablePropName="logImages" msprop:Generator_RowChangedName="logImagesRowChanged" msprop:Generator_RowChangingName="logImagesRowChanging" msprop:Generator_TableClassName="logImagesDataTable" msprop:Generator_RowClassName="logImagesRow" msprop:Generator_TableVarName="tablelogImages" msprop:Generator_UserTableName="logImages">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="liID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="liID" msprop:Generator_ColumnPropNameInTable="liIDColumn" msprop:Generator_ColumnVarNameInTable="columnliID" msprop:Generator_UserColumnName="liID" type="xs:int" />
              <xs:element name="LogID" msprop:Generator_ColumnPropNameInRow="LogID" msprop:Generator_ColumnPropNameInTable="LogIDColumn" msprop:Generator_ColumnVarNameInTable="columnLogID" msprop:Generator_UserColumnName="LogID" type="xs:int" minOccurs="0" />
              <xs:element name="logImage" msprop:Generator_ColumnPropNameInRow="logImage" msprop:Generator_ColumnPropNameInTable="logImageColumn" msprop:Generator_ColumnVarNameInTable="columnlogImage" msprop:Generator_UserColumnName="logImage" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="logs" msprop:Generator_RowEvHandlerName="logsRowChangeEventHandler" msprop:Generator_RowDeletedName="logsRowDeleted" msprop:Generator_RowDeletingName="logsRowDeleting" msprop:Generator_RowEvArgName="logsRowChangeEvent" msprop:Generator_TablePropName="logs" msprop:Generator_RowChangedName="logsRowChanged" msprop:Generator_RowChangingName="logsRowChanging" msprop:Generator_TableClassName="logsDataTable" msprop:Generator_RowClassName="logsRow" msprop:Generator_TableVarName="tablelogs" msprop:Generator_UserTableName="logs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LogID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="LogID" msprop:Generator_ColumnPropNameInTable="LogIDColumn" msprop:Generator_ColumnVarNameInTable="columnLogID" msprop:Generator_UserColumnName="LogID" type="xs:int" />
              <xs:element name="UserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_UserColumnName="UserID" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="productionDate" msprop:Generator_ColumnPropNameInRow="productionDate" msprop:Generator_ColumnPropNameInTable="productionDateColumn" msprop:Generator_ColumnVarNameInTable="columnproductionDate" msprop:Generator_UserColumnName="productionDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="identicator" msdata:ReadOnly="true" msprop:Generator_ColumnPropNameInRow="identicator" msprop:Generator_ColumnPropNameInTable="identicatorColumn" msprop:Generator_ColumnVarNameInTable="columnidenticator" msprop:Generator_UserColumnName="identicator" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="logView" msprop:Generator_RowEvHandlerName="logViewRowChangeEventHandler" msprop:Generator_RowDeletedName="logViewRowDeleted" msprop:Generator_RowDeletingName="logViewRowDeleting" msprop:Generator_RowEvArgName="logViewRowChangeEvent" msprop:Generator_TablePropName="logView" msprop:Generator_RowChangedName="logViewRowChanged" msprop:Generator_RowChangingName="logViewRowChanging" msprop:Generator_TableClassName="logViewDataTable" msprop:Generator_RowClassName="logViewRow" msprop:Generator_TableVarName="tablelogView" msprop:Generator_UserTableName="logView">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FirstName" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_ColumnVarNameInTable="columnFirstName" msprop:Generator_UserColumnName="FirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LastName" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_ColumnVarNameInTable="columnLastName" msprop:Generator_UserColumnName="LastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="productionDate" msprop:Generator_ColumnPropNameInRow="productionDate" msprop:Generator_ColumnPropNameInTable="productionDateColumn" msprop:Generator_ColumnVarNameInTable="columnproductionDate" msprop:Generator_UserColumnName="productionDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="identicator" msdata:ReadOnly="true" msprop:Generator_ColumnPropNameInRow="identicator" msprop:Generator_ColumnPropNameInTable="identicatorColumn" msprop:Generator_ColumnVarNameInTable="columnidenticator" msprop:Generator_UserColumnName="identicator" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="LogID" msprop:Generator_ColumnPropNameInRow="LogID" msprop:Generator_ColumnPropNameInTable="LogIDColumn" msprop:Generator_ColumnVarNameInTable="columnLogID" msprop:Generator_UserColumnName="LogID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:qrcodes" />
      <xs:field xpath="mstns:qrID" />
    </xs:unique>
    <xs:unique name="qrInfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:qrInfo" />
      <xs:field xpath="mstns:InfoID" />
    </xs:unique>
    <xs:unique name="roles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:roles" />
      <xs:field xpath="mstns:RoleID" />
    </xs:unique>
    <xs:unique name="userLogin_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:userLogin" />
      <xs:field xpath="mstns:LoginID" />
    </xs:unique>
    <xs:unique name="userRoles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:userRoles" />
      <xs:field xpath="mstns:urID" />
    </xs:unique>
    <xs:unique name="users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:UserID" />
    </xs:unique>
    <xs:unique name="qrLoginFetch_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:qrLoginFetch" />
      <xs:field xpath="mstns:UserID" />
    </xs:unique>
    <xs:unique name="passLoginFetch_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:passLoginFetch" />
      <xs:field xpath="mstns:UserID" />
    </xs:unique>
    <xs:unique name="logImages_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:logImages" />
      <xs:field xpath="mstns:liID" />
    </xs:unique>
    <xs:unique name="logs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:logs" />
      <xs:field xpath="mstns:LogID" />
    </xs:unique>
    <xs:unique name="logView_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:logView" />
      <xs:field xpath="mstns:LogID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__qrInfo__qrID__571DF1D5" msdata:parent="qrcodes" msdata:child="qrInfo" msdata:parentkey="qrID" msdata:childkey="qrID" msprop:Generator_UserParentTable="qrcodes" msprop:Generator_UserChildTable="qrInfo" msprop:Generator_RelationVarName="relationFK__qrInfo__qrID__571DF1D5" msprop:Generator_ChildPropName="GetqrInfoRows" msprop:Generator_UserRelationName="FK__qrInfo__qrID__571DF1D5" msprop:Generator_ParentPropName="qrcodesRow" />
      <msdata:Relationship name="FK__userLogin__UserI__52593CB8" msdata:parent="users" msdata:child="userLogin" msdata:parentkey="UserID" msdata:childkey="UserID" msprop:Generator_UserParentTable="users" msprop:Generator_UserChildTable="userLogin" msprop:Generator_RelationVarName="relationFK__userLogin__UserI__52593CB8" msprop:Generator_ChildPropName="GetuserLoginRows" msprop:Generator_ParentPropName="usersRow" msprop:Generator_UserRelationName="FK__userLogin__UserI__52593CB8" />
      <msdata:Relationship name="FK__userRoles__RoleI__4F7CD00D" msdata:parent="roles" msdata:child="userRoles" msdata:parentkey="RoleID" msdata:childkey="RoleID" msprop:Generator_UserParentTable="roles" msprop:Generator_UserChildTable="userRoles" msprop:Generator_RelationVarName="relationFK__userRoles__RoleI__4F7CD00D" msprop:Generator_ChildPropName="GetuserRolesRows" msprop:Generator_UserRelationName="FK__userRoles__RoleI__4F7CD00D" msprop:Generator_ParentPropName="rolesRow" />
      <msdata:Relationship name="FK__userRoles__UserI__4E88ABD4" msdata:parent="users" msdata:child="userRoles" msdata:parentkey="UserID" msdata:childkey="UserID" msprop:Generator_UserParentTable="users" msprop:Generator_UserChildTable="userRoles" msprop:Generator_RelationVarName="relationFK__userRoles__UserI__4E88ABD4" msprop:Generator_ChildPropName="GetuserRolesRows" msprop:Generator_ParentPropName="usersRow" msprop:Generator_UserRelationName="FK__userRoles__UserI__4E88ABD4" />
      <msdata:Relationship name="FK__logImages__LogID__339FAB6E" msdata:parent="logs" msdata:child="logImages" msdata:parentkey="LogID" msdata:childkey="LogID" msprop:Generator_UserParentTable="logs" msprop:Generator_UserChildTable="logImages" msprop:Generator_RelationVarName="relationFK__logImages__LogID__339FAB6E" msprop:Generator_UserRelationName="FK__logImages__LogID__339FAB6E" msprop:Generator_ChildPropName="GetlogImagesRows" msprop:Generator_ParentPropName="logsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>